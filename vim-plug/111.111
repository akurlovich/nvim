" auto-install vim-plug
if empty(glob('~/.config/nvim/autoload/plug.vim'))
  silent !curl -fLo ~/.config/nvim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  "autocmd VimEnter * PlugInstall
  "autocmd VimEnter * PlugInstall | source $MYVIMRC
endif

call plug#begin('~/.config/nvim/autoload/plugged')

    " Better Syntax Support
    Plug 'sheerun/vim-polyglot'
    " File Explorer
    Plug 'scrooloose/NERDTree'
    " Auto pairs for '(' '[' '{'
    Plug 'jiangmiao/auto-pairs'
    Plug 'tpope/vim-sensible'
"""Plug 'Shougo/unite.vim'
"""Plug 'Shougo/deoplete.nvim'
"Plug 'sirver/ultisnips'
Plug 'honza/vim-snippets'
Plug 'vimlab/split-term.vim'
Plug 'moll/vim-node'
Plug 'othree/yajs.vim'
Plug 'pangloss/vim-javascript'
"""Plug 'nono/vim-handlebars'
"""Plug 'neovim/nvim-lspconfig'
"""Plug 'glepnir/lspsaga.nvim'
Plug 'hrsh7th/cmp-nvim-lsp'
Plug 'hrsh7th/cmp-buffer'
Plug 'hrsh7th/cmp-path'
Plug 'hrsh7th/cmp-cmdline'
Plug 'hrsh7th/nvim-cmp'
Plug 'dcampos/nvim-snippy'
Plug 'dcampos/cmp-snippy'
Plug 'hrsh7th/nvim-compe'
Plug 'neoclide/coc.nvim', {'branch': 'release'}

Plug 'nvim-lua/plenary.nvim'
Plug 'nvim-telescope/telescope.nvim'

Plug 'maxmellon/vim-jsx-pretty'

Plug 'nvim-lualine/lualine.nvim'
" If you want to have icons in your statusline choose one of these
"Plug 'kyazdani42/nvim-web-devicons'

" Plug 'ryanoasis/vim-devicons' Icons without colours
Plug 'akinsho/bufferline.nvim'
Plug 'projekt0n/github-nvim-theme'

Plug 'glepnir/dashboard-nvim'

Plug 'kyazdani42/nvim-web-devicons' " for file icons
Plug 'kyazdani42/nvim-tree.lua'

Plug 'dracula/vim', { 'as': 'dracula' }



"""Plug 'neomake/neomake',           { 'do': 'npm install --cache-min Infinity --loglevel http -g eslint jsonlint' }
"""Plug 'carlitux/deoplete-ternjs',  { 'do': 'npm install --cache-min Infinity --loglevel http -g tern' }
"""Plug 'ternjs/tern_for_vim',       { 'do': 'npm install --cache-min Infinity --loglevel http' }
"""Plug 'neovim/node-host',          { 'do': 'npm install --cache-min Infinity --loglevel http' }

call plug#end()

